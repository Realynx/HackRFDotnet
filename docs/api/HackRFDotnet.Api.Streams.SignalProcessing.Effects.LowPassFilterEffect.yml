### YamlMime:ApiPage
title: Class LowPassFilterEffect
body:
- api1: Class LowPassFilterEffect
  id: HackRFDotnet_Api_Streams_SignalProcessing_Effects_LowPassFilterEffect
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/Api/Streams/SignalProcessing/Effects/LowPassFilterEffect.cs#L8
  metadata:
    uid: HackRFDotnet.Api.Streams.SignalProcessing.Effects.LowPassFilterEffect
    commentId: T:HackRFDotnet.Api.Streams.SignalProcessing.Effects.LowPassFilterEffect
- facts:
  - name: Namespace
    value:
      text: HackRFDotnet.Api.Streams.SignalProcessing.Effects
      url: HackRFDotnet.Api.Streams.SignalProcessing.Effects.html
  - name: Assembly
    value: HackRFDotnet.dll
- markdown: >-
    Low Pass Filter Effect to remove unwanted signals from the input signal.

    Configured with a bandwidth to limit via the filter.
- code: 'public class LowPassFilterEffect : SignalEffect<IQ, IQ>, ISignalEffectInput<IQ>'
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: SignalEffect<IQ, IQ>
    url: HackRFDotnet.Api.Streams.SignalProcessing.Effects.SignalEffect-2.html
  - text: LowPassFilterEffect
    url: HackRFDotnet.Api.Streams.SignalProcessing.Effects.LowPassFilterEffect.html
- h4: Implements
- list:
  - text: ISignalEffectInput<IQ>
    url: HackRFDotnet.Api.Streams.SignalProcessing.Interfaces.ISignalEffectInput-1.html
- h4: Inherited Members
- list:
  - text: SignalEffect<IQ, IQ>.TransformSignal(Span<IQ>, int)
    url: HackRFDotnet.Api.Streams.SignalProcessing.Effects.SignalEffect-2.html#HackRFDotnet_Api_Streams_SignalProcessing_Effects_SignalEffect_2_TransformSignal_System_Span__0__System_Int32_
  - text: SignalEffect<IQ, IQ>.AddChildEffect<TFormat>(SignalEffect<IQ, TFormat>)
    url: HackRFDotnet.Api.Streams.SignalProcessing.Effects.SignalEffect-2.html#HackRFDotnet_Api_Streams_SignalProcessing_Effects_SignalEffect_2_AddChildEffect__1_HackRFDotnet_Api_Streams_SignalProcessing_Effects_SignalEffect__1___0__
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: LowPassFilterEffect(SampleRate, Bandwidth)
  id: HackRFDotnet_Api_Streams_SignalProcessing_Effects_LowPassFilterEffect__ctor_HackRFDotnet_Api_SampleRate_HackRFDotnet_Api_Bandwidth_
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/Api/Streams/SignalProcessing/Effects/LowPassFilterEffect.cs#L17
  metadata:
    uid: HackRFDotnet.Api.Streams.SignalProcessing.Effects.LowPassFilterEffect.#ctor(HackRFDotnet.Api.SampleRate,HackRFDotnet.Api.Bandwidth)
    commentId: M:HackRFDotnet.Api.Streams.SignalProcessing.Effects.LowPassFilterEffect.#ctor(HackRFDotnet.Api.SampleRate,HackRFDotnet.Api.Bandwidth)
- markdown: Apply a low pass filter on the signal. Expects Frequency Domain input.
- code: public LowPassFilterEffect(SampleRate sampleRate, Bandwidth bandwith)
- h4: Parameters
- parameters:
  - name: sampleRate
    type:
    - text: SampleRate
      url: HackRFDotnet.Api.SampleRate.html
    description: ''
  - name: bandwith
    type:
    - text: Bandwidth
      url: HackRFDotnet.Api.Bandwidth.html
    description: ''
- h2: Methods
- api3: TransformSignal(Span<IQ>, int)
  id: HackRFDotnet_Api_Streams_SignalProcessing_Effects_LowPassFilterEffect_TransformSignal_System_Span_HackRFDotnet_Api_Streams_IQ__System_Int32_
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/Api/Streams/SignalProcessing/Effects/LowPassFilterEffect.cs#L22
  metadata:
    uid: HackRFDotnet.Api.Streams.SignalProcessing.Effects.LowPassFilterEffect.TransformSignal(System.Span{HackRFDotnet.Api.Streams.IQ},System.Int32)
    commentId: M:HackRFDotnet.Api.Streams.SignalProcessing.Effects.LowPassFilterEffect.TransformSignal(System.Span{HackRFDotnet.Api.Streams.IQ},System.Int32)
- markdown: Manipulate in-place, the signal provided and return a new length is samples were reduced.
- code: public override int TransformSignal(Span<IQ> signalTheta, int length)
- h4: Parameters
- parameters:
  - name: signalTheta
    type:
    - text: Span
      url: https://learn.microsoft.com/dotnet/api/system.span-1
    - <
    - text: IQ
      url: HackRFDotnet.Api.Streams.IQ.html
    - '>'
    description: ''
  - name: length
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: ''
- h4: Returns
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: ''
languageId: csharp
metadata:
  description: >-
    Low Pass Filter Effect to remove unwanted signals from the input signal.

    Configured with a bandwidth to limit via the filter.
