### YamlMime:ApiPage
title: Class DigitalRadioDevice
body:
- api1: Class DigitalRadioDevice
  id: HackRFDotnet_Api_DigitalRadioDevice
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/Api/DigitalRadioDevice.cs#L13
  metadata:
    uid: HackRFDotnet.Api.DigitalRadioDevice
    commentId: T:HackRFDotnet.Api.DigitalRadioDevice
- facts:
  - name: Namespace
    value:
      text: HackRFDotnet.Api
      url: HackRFDotnet.Api.html
  - name: Assembly
    value: HackRFDotnet.dll
- markdown: Radio Device to receive IQ Samples with.
- code: 'public class DigitalRadioDevice : IDigitalRadioDevice, IDisposable'
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: DigitalRadioDevice
    url: HackRFDotnet.Api.DigitalRadioDevice.html
- h4: Implements
- list:
  - text: IDigitalRadioDevice
    url: HackRFDotnet.Api.Interfaces.IDigitalRadioDevice.html
  - text: IDisposable
    url: https://learn.microsoft.com/dotnet/api/system.idisposable
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h4: Extension Methods
- list:
  - text: RfDeviceExtensions.AttenuateAmplification(DigitalRadioDevice)
    url: HackRFDotnet.Api.Extensions.RfDeviceExtensions.html#HackRFDotnet_Api_Extensions_RfDeviceExtensions_AttenuateAmplification_HackRFDotnet_Api_DigitalRadioDevice_
- h2: Fields
- api3: DevicePtr
  id: HackRFDotnet_Api_DigitalRadioDevice_DevicePtr
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/Api/DigitalRadioDevice.cs#L43
  metadata:
    uid: HackRFDotnet.Api.DigitalRadioDevice.DevicePtr
    commentId: F:HackRFDotnet.Api.DigitalRadioDevice.DevicePtr
- code: public readonly HackRFDevice* DevicePtr
- h4: Field Value
- parameters:
  - type:
    - text: HackRFDevice
      url: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice.html
    - '*'
- h2: Properties
- api3: Bandwidth
  id: HackRFDotnet_Api_DigitalRadioDevice_Bandwidth
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/Api/DigitalRadioDevice.cs#L22
  metadata:
    uid: HackRFDotnet.Api.DigitalRadioDevice.Bandwidth
    commentId: P:HackRFDotnet.Api.DigitalRadioDevice.Bandwidth
- markdown: Current capture bandwidth.
- code: public Bandwidth Bandwidth { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: Bandwidth
      url: HackRFDotnet.Api.Bandwidth.html
- api3: DeviceSamplingRate
  id: HackRFDotnet_Api_DigitalRadioDevice_DeviceSamplingRate
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/Api/DigitalRadioDevice.cs#L27
  metadata:
    uid: HackRFDotnet.Api.DigitalRadioDevice.DeviceSamplingRate
    commentId: P:HackRFDotnet.Api.DigitalRadioDevice.DeviceSamplingRate
- markdown: Current capture sample rate.
- code: public SampleRate DeviceSamplingRate { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: SampleRate
      url: HackRFDotnet.Api.SampleRate.html
- api3: DeviceStream
  id: HackRFDotnet_Api_DigitalRadioDevice_DeviceStream
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/Api/DigitalRadioDevice.cs#L32
  metadata:
    uid: HackRFDotnet.Api.DigitalRadioDevice.DeviceStream
    commentId: P:HackRFDotnet.Api.DigitalRadioDevice.DeviceStream
- markdown: The immutable stream running on this device.
- code: public IIQStream? DeviceStream { get; }
- h4: Property Value
- parameters:
  - type:
    - text: IIQStream
      url: HackRFDotnet.Api.Streams.Interfaces.IIQStream.html
    - '?'
- api3: Frequency
  id: HackRFDotnet_Api_DigitalRadioDevice_Frequency
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/Api/DigitalRadioDevice.cs#L17
  metadata:
    uid: HackRFDotnet.Api.DigitalRadioDevice.Frequency
    commentId: P:HackRFDotnet.Api.DigitalRadioDevice.Frequency
- markdown: Current frequency tuned to.
- code: public Frequency Frequency { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: Frequency
      url: HackRFDotnet.Api.Frequency.html
- api3: IsConnected
  id: HackRFDotnet_Api_DigitalRadioDevice_IsConnected
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/Api/DigitalRadioDevice.cs#L37
  metadata:
    uid: HackRFDotnet.Api.DigitalRadioDevice.IsConnected
    commentId: P:HackRFDotnet.Api.DigitalRadioDevice.IsConnected
- markdown: Is the device connected to the usb host in the native library?
- code: public bool IsConnected { get; }
- h4: Property Value
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- h2: Methods
- api3: Dispose()
  id: HackRFDotnet_Api_DigitalRadioDevice_Dispose
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/Api/DigitalRadioDevice.cs#L127
  metadata:
    uid: HackRFDotnet.Api.DigitalRadioDevice.Dispose
    commentId: M:HackRFDotnet.Api.DigitalRadioDevice.Dispose
- markdown: Dispose the Rf Device from the library.
- code: public void Dispose()
- api3: SetAmplifications(uint, uint, bool)
  id: HackRFDotnet_Api_DigitalRadioDevice_SetAmplifications_System_UInt32_System_UInt32_System_Boolean_
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/Api/DigitalRadioDevice.cs#L56
  metadata:
    uid: HackRFDotnet.Api.DigitalRadioDevice.SetAmplifications(System.UInt32,System.UInt32,System.Boolean)
    commentId: M:HackRFDotnet.Api.DigitalRadioDevice.SetAmplifications(System.UInt32,System.UInt32,System.Boolean)
- markdown: Set the Lna, Vga, and Internal amp settings for the Rf Device.
- code: public void SetAmplifications(uint lna, uint vga, bool internalAmp)
- h4: Parameters
- parameters:
  - name: lna
    type:
    - text: uint
      url: https://learn.microsoft.com/dotnet/api/system.uint32
    description: ''
  - name: vga
    type:
    - text: uint
      url: https://learn.microsoft.com/dotnet/api/system.uint32
    description: ''
  - name: internalAmp
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: ''
- api3: SetFrequency(Frequency, Bandwidth)
  id: HackRFDotnet_Api_DigitalRadioDevice_SetFrequency_HackRFDotnet_Api_Frequency_HackRFDotnet_Api_Bandwidth_
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/Api/DigitalRadioDevice.cs#L68
  metadata:
    uid: HackRFDotnet.Api.DigitalRadioDevice.SetFrequency(HackRFDotnet.Api.Frequency,HackRFDotnet.Api.Bandwidth)
    commentId: M:HackRFDotnet.Api.DigitalRadioDevice.SetFrequency(HackRFDotnet.Api.Frequency,HackRFDotnet.Api.Bandwidth)
- markdown: Set the tuning frequency and bandwidth for the Rf Device.
- code: public bool SetFrequency(Frequency radioFrequency, Bandwidth bandwidth)
- h4: Parameters
- parameters:
  - name: radioFrequency
    type:
    - text: Frequency
      url: HackRFDotnet.Api.Frequency.html
    description: ''
  - name: bandwidth
    type:
    - text: Bandwidth
      url: HackRFDotnet.Api.Bandwidth.html
    description: ''
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: ''
- api3: SetSampleRate(SampleRate)
  id: HackRFDotnet_Api_DigitalRadioDevice_SetSampleRate_HackRFDotnet_Api_SampleRate_
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/Api/DigitalRadioDevice.cs#L83
  metadata:
    uid: HackRFDotnet.Api.DigitalRadioDevice.SetSampleRate(HackRFDotnet.Api.SampleRate)
    commentId: M:HackRFDotnet.Api.DigitalRadioDevice.SetSampleRate(HackRFDotnet.Api.SampleRate)
- markdown: >-
    Set the sample rate for the radio device to capture data at.

    This will also set the baseband filter the smallest filter 

    that fits the sample rate's Nyquist frequency cutoff.
- code: public void SetSampleRate(SampleRate sampleRate)
- h4: Parameters
- parameters:
  - name: sampleRate
    type:
    - text: SampleRate
      url: HackRFDotnet.Api.SampleRate.html
    description: ''
- api3: StartRx(HackRFSampleBlockCallback)
  id: HackRFDotnet_Api_DigitalRadioDevice_StartRx_HackRFDotnet_NativeApi_Structs_HackRFSampleBlockCallback_
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/Api/DigitalRadioDevice.cs#L99
  metadata:
    uid: HackRFDotnet.Api.DigitalRadioDevice.StartRx(HackRFDotnet.NativeApi.Structs.HackRFSampleBlockCallback)
    commentId: M:HackRFDotnet.Api.DigitalRadioDevice.StartRx(HackRFDotnet.NativeApi.Structs.HackRFSampleBlockCallback)
- markdown: Start receiving data from the RfDevice.
- code: public bool StartRx(HackRFSampleBlockCallback rxCallback)
- h4: Parameters
- parameters:
  - name: rxCallback
    type:
    - text: HackRFSampleBlockCallback
      url: HackRFDotnet.NativeApi.Structs.HackRFSampleBlockCallback.html
    description: ''
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: ''
- h4: Exceptions
- parameters:
  - type:
    - text: NullCallbackException
      url: HackRFDotnet.Api.Streams.Exceptions.NullCallbackException.html
    description: ''
- api3: StopRx()
  id: HackRFDotnet_Api_DigitalRadioDevice_StopRx
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/Api/DigitalRadioDevice.cs#L119
  metadata:
    uid: HackRFDotnet.Api.DigitalRadioDevice.StopRx
    commentId: M:HackRFDotnet.Api.DigitalRadioDevice.StopRx
- markdown: Stop receiving data from the Rf Device.
- code: public bool StopRx()
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: ''
languageId: csharp
metadata:
  description: Radio Device to receive IQ Samples with.
