### YamlMime:ApiPage
title: Class NativeConstants
body:
- api1: Class NativeConstants
  id: HackRFDotnet_NativeApi_NativeConstants
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/NativeApi/NativeConstants.cs#L5
  metadata:
    uid: HackRFDotnet.NativeApi.NativeConstants
    commentId: T:HackRFDotnet.NativeApi.NativeConstants
- facts:
  - name: Namespace
    value:
      text: HackRFDotnet.NativeApi
      url: HackRFDotnet.NativeApi.html
  - name: Assembly
    value: HackRFDotnet.dll
- code: public class NativeConstants
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: NativeConstants
    url: HackRFDotnet.NativeApi.NativeConstants.html
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Fields
- api3: BOARD_ID_HACKRF_ONE
  id: HackRFDotnet_NativeApi_NativeConstants_BOARD_ID_HACKRF_ONE
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/NativeApi/NativeConstants.cs#L71
  metadata:
    uid: HackRFDotnet.NativeApi.NativeConstants.BOARD_ID_HACKRF_ONE
    commentId: F:HackRFDotnet.NativeApi.NativeConstants.BOARD_ID_HACKRF_ONE
- markdown: These deprecated board ID names are provided for API compatibility.
- code: public const HackrfBoardId BOARD_ID_HACKRF_ONE = BOARD_ID_HACKRF1_OG
- h4: Field Value
- parameters:
  - type:
    - text: HackrfBoardId
      url: HackRFDotnet.NativeApi.Enums.System.HackrfBoardId.html
- api3: BOARD_ID_INVALID
  id: HackRFDotnet_NativeApi_NativeConstants_BOARD_ID_INVALID
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/NativeApi/NativeConstants.cs#L76
  metadata:
    uid: HackRFDotnet.NativeApi.NativeConstants.BOARD_ID_INVALID
    commentId: F:HackRFDotnet.NativeApi.NativeConstants.BOARD_ID_INVALID
- markdown: These deprecated board ID names are provided for API compatibility.
- code: public const HackrfBoardId BOARD_ID_INVALID = BOARD_ID_UNDETECTED
- h4: Field Value
- parameters:
  - type:
    - text: HackrfBoardId
      url: HackRFDotnet.NativeApi.Enums.System.HackrfBoardId.html
- api3: BYTES_PER_BLOCK
  id: HackRFDotnet_NativeApi_NativeConstants_BYTES_PER_BLOCK
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/NativeApi/NativeConstants.cs#L16
  metadata:
    uid: HackRFDotnet.NativeApi.NativeConstants.BYTES_PER_BLOCK
    commentId: F:HackRFDotnet.NativeApi.NativeConstants.BYTES_PER_BLOCK
- markdown: Number of bytes per tuning for sweeping.
- code: public const uint BYTES_PER_BLOCK = 16384
- h4: Field Value
- parameters:
  - type:
    - text: uint
      url: https://learn.microsoft.com/dotnet/api/system.uint32
- api3: HACKRF_BOARD_REV_GSG
  id: HackRFDotnet_NativeApi_NativeConstants_HACKRF_BOARD_REV_GSG
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/NativeApi/NativeConstants.cs#L46
  metadata:
    uid: HackRFDotnet.NativeApi.NativeConstants.HACKRF_BOARD_REV_GSG
    commentId: F:HackRFDotnet.NativeApi.NativeConstants.HACKRF_BOARD_REV_GSG
- markdown: Made by GSG bit in @ref hackrf_board_rev enum and in platform ID.
- code: public const uint HACKRF_BOARD_REV_GSG = 128
- h4: Field Value
- parameters:
  - type:
    - text: uint
      url: https://learn.microsoft.com/dotnet/api/system.uint32
- api3: HACKRF_OPERACAKE_ADDRESS_INVALID
  id: HackRFDotnet_NativeApi_NativeConstants_HACKRF_OPERACAKE_ADDRESS_INVALID
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/NativeApi/NativeConstants.cs#L26
  metadata:
    uid: HackRFDotnet.NativeApi.NativeConstants.HACKRF_OPERACAKE_ADDRESS_INVALID
    commentId: F:HackRFDotnet.NativeApi.NativeConstants.HACKRF_OPERACAKE_ADDRESS_INVALID
- markdown: Invalid Opera Cake add-on board address, placeholder in <xref href="HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Operacake.GetOperacakeBoards(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*%2cSystem.Byte*)" data-throw-if-not-resolved="false"></xref>.
- code: public const uint HACKRF_OPERACAKE_ADDRESS_INVALID = 255
- h4: Field Value
- parameters:
  - type:
    - text: uint
      url: https://learn.microsoft.com/dotnet/api/system.uint32
- api3: HACKRF_OPERACAKE_MAX_BOARDS
  id: HackRFDotnet_NativeApi_NativeConstants_HACKRF_OPERACAKE_MAX_BOARDS
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/NativeApi/NativeConstants.cs#L31
  metadata:
    uid: HackRFDotnet.NativeApi.NativeConstants.HACKRF_OPERACAKE_MAX_BOARDS
    commentId: F:HackRFDotnet.NativeApi.NativeConstants.HACKRF_OPERACAKE_MAX_BOARDS
- markdown: Maximum number of connected Opera Cake add-on boards.
- code: public const uint HACKRF_OPERACAKE_MAX_BOARDS = 8
- h4: Field Value
- parameters:
  - type:
    - text: uint
      url: https://learn.microsoft.com/dotnet/api/system.uint32
- api3: HACKRF_OPERACAKE_MAX_DWELL_TIMES
  id: HackRFDotnet_NativeApi_NativeConstants_HACKRF_OPERACAKE_MAX_DWELL_TIMES
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/NativeApi/NativeConstants.cs#L36
  metadata:
    uid: HackRFDotnet.NativeApi.NativeConstants.HACKRF_OPERACAKE_MAX_DWELL_TIMES
    commentId: F:HackRFDotnet.NativeApi.NativeConstants.HACKRF_OPERACAKE_MAX_DWELL_TIMES
- markdown: Maximum number of specifiable dwell times for Opera Cake add-on boards.
- code: public const uint HACKRF_OPERACAKE_MAX_DWELL_TIMES = 16
- h4: Field Value
- parameters:
  - type:
    - text: uint
      url: https://learn.microsoft.com/dotnet/api/system.uint32
- api3: HACKRF_OPERACAKE_MAX_FREQ_RANGES
  id: HackRFDotnet_NativeApi_NativeConstants_HACKRF_OPERACAKE_MAX_FREQ_RANGES
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/NativeApi/NativeConstants.cs#L41
  metadata:
    uid: HackRFDotnet.NativeApi.NativeConstants.HACKRF_OPERACAKE_MAX_FREQ_RANGES
    commentId: F:HackRFDotnet.NativeApi.NativeConstants.HACKRF_OPERACAKE_MAX_FREQ_RANGES
- markdown: Maximum number of specifiable frequency ranges for Opera Cake add-on boards.
- code: public const uint HACKRF_OPERACAKE_MAX_FREQ_RANGES = 8
- h4: Field Value
- parameters:
  - type:
    - text: uint
      url: https://learn.microsoft.com/dotnet/api/system.uint32
- api3: HACKRF_PLATFORM_HACKRF1_OG
  id: HackRFDotnet_NativeApi_NativeConstants_HACKRF_PLATFORM_HACKRF1_OG
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/NativeApi/NativeConstants.cs#L56
  metadata:
    uid: HackRFDotnet.NativeApi.NativeConstants.HACKRF_PLATFORM_HACKRF1_OG
    commentId: F:HackRFDotnet.NativeApi.NativeConstants.HACKRF_PLATFORM_HACKRF1_OG
- markdown: HACKRF ONE (pre r9) platform bit in result of <xref href="HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Firmware.ReadSupportedPlatform(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*%2cSystem.UInt32*)" data-throw-if-not-resolved="false"></xref>.
- code: public const uint HACKRF_PLATFORM_HACKRF1_OG = 2
- h4: Field Value
- parameters:
  - type:
    - text: uint
      url: https://learn.microsoft.com/dotnet/api/system.uint32
- api3: HACKRF_PLATFORM_HACKRF1_R9
  id: HackRFDotnet_NativeApi_NativeConstants_HACKRF_PLATFORM_HACKRF1_R9
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/NativeApi/NativeConstants.cs#L66
  metadata:
    uid: HackRFDotnet.NativeApi.NativeConstants.HACKRF_PLATFORM_HACKRF1_R9
    commentId: F:HackRFDotnet.NativeApi.NativeConstants.HACKRF_PLATFORM_HACKRF1_R9
- markdown: HACKRF ONE (r9 or later) platform bit in result of <xref href="HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Firmware.ReadSupportedPlatform(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*%2cSystem.UInt32*)" data-throw-if-not-resolved="false"></xref>.
- code: public const uint HACKRF_PLATFORM_HACKRF1_R9 = 8
- h4: Field Value
- parameters:
  - type:
    - text: uint
      url: https://learn.microsoft.com/dotnet/api/system.uint32
- api3: HACKRF_PLATFORM_JAWBREAKER
  id: HackRFDotnet_NativeApi_NativeConstants_HACKRF_PLATFORM_JAWBREAKER
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/NativeApi/NativeConstants.cs#L51
  metadata:
    uid: HackRFDotnet.NativeApi.NativeConstants.HACKRF_PLATFORM_JAWBREAKER
    commentId: F:HackRFDotnet.NativeApi.NativeConstants.HACKRF_PLATFORM_JAWBREAKER
- markdown: JAWBREAKER platform bit in result of <xref href="HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Firmware.ReadSupportedPlatform(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*%2cSystem.UInt32*)" data-throw-if-not-resolved="false"></xref>.
- code: public const uint HACKRF_PLATFORM_JAWBREAKER = 1
- h4: Field Value
- parameters:
  - type:
    - text: uint
      url: https://learn.microsoft.com/dotnet/api/system.uint32
- api3: HACKRF_PLATFORM_RAD1O
  id: HackRFDotnet_NativeApi_NativeConstants_HACKRF_PLATFORM_RAD1O
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/NativeApi/NativeConstants.cs#L61
  metadata:
    uid: HackRFDotnet.NativeApi.NativeConstants.HACKRF_PLATFORM_RAD1O
    commentId: F:HackRFDotnet.NativeApi.NativeConstants.HACKRF_PLATFORM_RAD1O
- markdown: RAD1O platform bit in result of <xref href="HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Firmware.ReadSupportedPlatform(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*%2cSystem.UInt32*)" data-throw-if-not-resolved="false"></xref>.
- code: public const uint HACKRF_PLATFORM_RAD1O = 4
- h4: Field Value
- parameters:
  - type:
    - text: uint
      url: https://learn.microsoft.com/dotnet/api/system.uint32
- api3: MAX_SWEEP_RANGES
  id: HackRFDotnet_NativeApi_NativeConstants_MAX_SWEEP_RANGES
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/NativeApi/NativeConstants.cs#L21
  metadata:
    uid: HackRFDotnet.NativeApi.NativeConstants.MAX_SWEEP_RANGES
    commentId: F:HackRFDotnet.NativeApi.NativeConstants.MAX_SWEEP_RANGES
- markdown: Maximum number of sweep ranges to be specified for <xref href="HackRFDotnet.NativeApi.Lib.HackRfNativeLib.DeviceStreaming.InitSweep(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*%2cSystem.UInt16*%2cSystem.Int32%2cSystem.UInt32%2cSystem.UInt32%2cSystem.UInt32%2cHackRFDotnet.NativeApi.Enums.SweepStyle)" data-throw-if-not-resolved="false"></xref>.
- code: public const uint MAX_SWEEP_RANGES = 10
- h4: Field Value
- parameters:
  - type:
    - text: uint
      url: https://learn.microsoft.com/dotnet/api/system.uint32
- api3: SAMPLES_PER_BLOCK
  id: HackRFDotnet_NativeApi_NativeConstants_SAMPLES_PER_BLOCK
  src: https://github.com/Realynx/HackRFDotnet/blob/master/HackRFDotnet/NativeApi/NativeConstants.cs#L11
  metadata:
    uid: HackRFDotnet.NativeApi.NativeConstants.SAMPLES_PER_BLOCK
    commentId: F:HackRFDotnet.NativeApi.NativeConstants.SAMPLES_PER_BLOCK
- markdown: Number of samples per tuning when sweeping.
- code: public const uint SAMPLES_PER_BLOCK = 8192
- h4: Field Value
- parameters:
  - type:
    - text: uint
      url: https://learn.microsoft.com/dotnet/api/system.uint32
languageId: csharp
