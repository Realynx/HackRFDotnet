### YamlMime:ManagedReference
items:
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices
  commentId: T:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices
  id: HackRfNativeLib.Devices
  parent: HackRFDotnet.NativeApi.Lib
  children:
  - HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.CloseDevice(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*)
  - HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListFree(HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*)
  - HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListOpen(HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*,System.Int32,HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**)
  - HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.OpenDevice(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**)
  - HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.OpenDeviceBySerial(System.String,HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**)
  - HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.QueryDeviceList
  - HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.ResetDevice(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*)
  - HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.SetDeviceLeds(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*,System.Byte)
  - HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.SetDeviceUiEnabled(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*,System.Byte)
  langs:
  - csharp
  - vb
  name: HackRfNativeLib.Devices
  nameWithType: HackRfNativeLib.Devices
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices
  type: Class
  source:
    remote:
      path: HackRFDotnet/NativeApi/Lib/Devices.cs
      branch: master
      repo: https://github.com/Realynx/HackRFDotnet.git
    id: Devices
    path: HackRFDotnet/NativeApi/Lib/Devices.cs
    startLine: 7
  assemblies:
  - HackRFDotnet
  namespace: HackRFDotnet.NativeApi.Lib
  syntax:
    content: public static class HackRfNativeLib.Devices
    content.vb: Public Module HackRfNativeLib.Devices
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.OpenDevice(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**)
  commentId: M:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.OpenDevice(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**)
  id: OpenDevice(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**)
  parent: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices
  langs:
  - csharp
  - vb
  name: OpenDevice(HackRFDevice**)
  nameWithType: HackRfNativeLib.Devices.OpenDevice(HackRFDevice**)
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.OpenDevice(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**)
  type: Method
  assemblies:
  - HackRFDotnet
  namespace: HackRFDotnet.NativeApi.Lib
  summary: Open first available HackRF device.
  example: []
  syntax:
    content: public static extern HackrfError OpenDevice(HackRFDevice** device)
    parameters:
    - id: device
      type: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**
      description: Device handle.
    return:
      type: HackRFDotnet.NativeApi.Enums.System.HackrfError
      description: >-
        <xref href="HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_SUCCESS" data-throw-if-not-resolved="false"></xref> on success, <xref href="HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_ERROR_INVALID_PARAM" data-throw-if-not-resolved="false"></xref> if <code class="paramref">device</code> is NULL,

        <xref href="HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_ERROR_NOT_FOUND" data-throw-if-not-resolved="false"></xref> if no HackRF devices are found or other <xref href="HackRFDotnet.NativeApi.Enums.System.HackrfError" data-throw-if-not-resolved="false"></xref> variant.
    content.vb: Public Shared Function OpenDevice(device As HackRFDevice**) As HackrfError
  overload: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.OpenDevice*
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.QueryDeviceList
  commentId: M:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.QueryDeviceList
  id: QueryDeviceList
  parent: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices
  langs:
  - csharp
  - vb
  name: QueryDeviceList()
  nameWithType: HackRfNativeLib.Devices.QueryDeviceList()
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.QueryDeviceList()
  type: Method
  assemblies:
  - HackRFDotnet
  namespace: HackRFDotnet.NativeApi.Lib
  summary: List connected HackRF devices.
  example: []
  syntax:
    content: public static extern HackRFDeviceList* QueryDeviceList()
    return:
      type: HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*
      description: List of connected devices. The list should be freed with <xref href="HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListFree(HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function QueryDeviceList() As HackRFDeviceList*
  overload: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.QueryDeviceList*
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListOpen(HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*,System.Int32,HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**)
  commentId: M:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListOpen(HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*,System.Int32,HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**)
  id: DeviceListOpen(HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*,System.Int32,HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**)
  parent: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices
  langs:
  - csharp
  - vb
  name: DeviceListOpen(HackRFDeviceList*, int, HackRFDevice**)
  nameWithType: HackRfNativeLib.Devices.DeviceListOpen(HackRFDeviceList*, int, HackRFDevice**)
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListOpen(HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*, int, HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**)
  type: Method
  assemblies:
  - HackRFDotnet
  namespace: HackRFDotnet.NativeApi.Lib
  summary: Open a <xref href="HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice" data-throw-if-not-resolved="false"></xref> from a device list.
  example: []
  syntax:
    content: public static extern HackrfError DeviceListOpen(HackRFDeviceList* list, int idx, HackRFDevice** device)
    parameters:
    - id: list
      type: HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*
      description: Device list to open device from.
    - id: idx
      type: System.Int32
      description: Index of the device to open.
    - id: device
      type: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**
      description: Device handle to open.
    return:
      type: HackRFDotnet.NativeApi.Enums.System.HackrfError
      description: <xref href="HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_SUCCESS" data-throw-if-not-resolved="false"></xref> on success, <xref href="HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_ERROR_INVALID_PARAM" data-throw-if-not-resolved="false"></xref> on invalid parameters or other <xref href="HackRFDotnet.NativeApi.Enums.System.HackrfError" data-throw-if-not-resolved="false"></xref> variant.
    content.vb: Public Shared Function DeviceListOpen(list As HackRFDeviceList*, idx As Integer, device As HackRFDevice**) As HackrfError
  overload: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListOpen*
  nameWithType.vb: HackRfNativeLib.Devices.DeviceListOpen(HackRFDeviceList*, Integer, HackRFDevice**)
  fullName.vb: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListOpen(HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*, Integer, HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**)
  name.vb: DeviceListOpen(HackRFDeviceList*, Integer, HackRFDevice**)
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.OpenDeviceBySerial(System.String,HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**)
  commentId: M:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.OpenDeviceBySerial(System.String,HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**)
  id: OpenDeviceBySerial(System.String,HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**)
  parent: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices
  langs:
  - csharp
  - vb
  name: OpenDeviceBySerial(string, HackRFDevice**)
  nameWithType: HackRfNativeLib.Devices.OpenDeviceBySerial(string, HackRFDevice**)
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.OpenDeviceBySerial(string, HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**)
  type: Method
  assemblies:
  - HackRFDotnet
  namespace: HackRFDotnet.NativeApi.Lib
  summary: Open HackRF device by serial number.
  example: []
  syntax:
    content: public static extern HackrfError OpenDeviceBySerial(string desired_serial_number, HackRFDevice** device)
    parameters:
    - id: desired_serial_number
      type: System.String
      description: Serial number of device to open. If NULL then default to first device found.
    - id: device
      type: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**
      description: Device handle.
    return:
      type: HackRFDotnet.NativeApi.Enums.System.HackrfError
      description: <xref href="HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_SUCCESS" data-throw-if-not-resolved="false"></xref> on success, <xref href="HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_ERROR_INVALID_PARAM" data-throw-if-not-resolved="false"></xref> on invalid parameters or other <xref href="HackRFDotnet.NativeApi.Enums.System.HackrfError" data-throw-if-not-resolved="false"></xref> variant.
    content.vb: Public Shared Function OpenDeviceBySerial(desired_serial_number As String, device As HackRFDevice**) As HackrfError
  overload: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.OpenDeviceBySerial*
  nameWithType.vb: HackRfNativeLib.Devices.OpenDeviceBySerial(String, HackRFDevice**)
  fullName.vb: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.OpenDeviceBySerial(String, HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**)
  name.vb: OpenDeviceBySerial(String, HackRFDevice**)
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListFree(HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*)
  commentId: M:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListFree(HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*)
  id: DeviceListFree(HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*)
  parent: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices
  langs:
  - csharp
  - vb
  name: DeviceListFree(HackRFDeviceList*)
  nameWithType: HackRfNativeLib.Devices.DeviceListFree(HackRFDeviceList*)
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListFree(HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*)
  type: Method
  assemblies:
  - HackRFDotnet
  namespace: HackRFDotnet.NativeApi.Lib
  summary: Free a previously allocated <xref href="HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice" data-throw-if-not-resolved="false"></xref> list.
  example: []
  syntax:
    content: public static extern void DeviceListFree(HackRFDeviceList* list)
    parameters:
    - id: list
      type: HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*
      description: List to free.
    content.vb: Public Shared Sub DeviceListFree(list As HackRFDeviceList*)
  overload: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListFree*
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.CloseDevice(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*)
  commentId: M:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.CloseDevice(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*)
  id: CloseDevice(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*)
  parent: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices
  langs:
  - csharp
  - vb
  name: CloseDevice(HackRFDevice*)
  nameWithType: HackRfNativeLib.Devices.CloseDevice(HackRFDevice*)
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.CloseDevice(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*)
  type: Method
  assemblies:
  - HackRFDotnet
  namespace: HackRFDotnet.NativeApi.Lib
  summary: Close a previously opened device.
  example: []
  syntax:
    content: public static extern HackrfError CloseDevice(HackRFDevice* device)
    parameters:
    - id: device
      type: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*
      description: Device to close.
    return:
      type: HackRFDotnet.NativeApi.Enums.System.HackrfError
      description: <xref href="HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_SUCCESS" data-throw-if-not-resolved="false"></xref> on success or variant of <xref href="HackRFDotnet.NativeApi.Enums.System.HackrfError" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function CloseDevice(device As HackRFDevice*) As HackrfError
  overload: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.CloseDevice*
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.ResetDevice(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*)
  commentId: M:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.ResetDevice(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*)
  id: ResetDevice(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*)
  parent: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices
  langs:
  - csharp
  - vb
  name: ResetDevice(HackRFDevice*)
  nameWithType: HackRfNativeLib.Devices.ResetDevice(HackRFDevice*)
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.ResetDevice(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*)
  type: Method
  assemblies:
  - HackRFDotnet
  namespace: HackRFDotnet.NativeApi.Lib
  summary: >-
    Reset HackRF device.


    Requires USB API version 0x0102 or above!
  example: []
  syntax:
    content: public static extern HackrfError ResetDevice(HackRFDevice* device)
    parameters:
    - id: device
      type: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*
      description: Device to reset.
    return:
      type: HackRFDotnet.NativeApi.Enums.System.HackrfError
      description: <xref href="HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_SUCCESS" data-throw-if-not-resolved="false"></xref> on success or <xref href="HackRFDotnet.NativeApi.Enums.System.HackrfError" data-throw-if-not-resolved="false"></xref> variant.
    content.vb: Public Shared Function ResetDevice(device As HackRFDevice*) As HackrfError
  overload: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.ResetDevice*
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.SetDeviceLeds(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*,System.Byte)
  commentId: M:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.SetDeviceLeds(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*,System.Byte)
  id: SetDeviceLeds(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*,System.Byte)
  parent: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices
  langs:
  - csharp
  - vb
  name: SetDeviceLeds(HackRFDevice*, byte)
  nameWithType: HackRfNativeLib.Devices.SetDeviceLeds(HackRFDevice*, byte)
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.SetDeviceLeds(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*, byte)
  type: Method
  assemblies:
  - HackRFDotnet
  namespace: HackRFDotnet.NativeApi.Lib
  summary: >-
    Turn on or off (override) the LEDs of the HackRF device.

    This function can turn on or off the LEDs of the device. There are 3 controllable LEDs on the HackRF one:

    USB, RX and TX. On the Rad1o, there are 4 LEDs. Each LED can be set individually, but the setting might get overridden by other functions.


    The LEDs can be set via specifying them as bits of a 8 bit number @p state, bit 0 representing the first (USB on the HackRF One)

    and bit 3 or 4 representing the last LED. The upper 4 or 5 bits are unused.

    For example, binary value 0bxxxxx101 turns on the USB and TX LEDs on the HackRF One.
  example: []
  syntax:
    content: public static extern HackrfError SetDeviceLeds(HackRFDevice* device, byte state)
    parameters:
    - id: device
      type: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*
      description: Device to query.
    - id: state
      type: System.Byte
      description: LED states as a bitfield.
    return:
      type: HackRFDotnet.NativeApi.Enums.System.HackrfError
      description: <xref href="HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_SUCCESS" data-throw-if-not-resolved="false"></xref> on success or <xref href="HackRFDotnet.NativeApi.Enums.System.HackrfError" data-throw-if-not-resolved="false"></xref> variant.
    content.vb: Public Shared Function SetDeviceLeds(device As HackRFDevice*, state As Byte) As HackrfError
  overload: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.SetDeviceLeds*
  nameWithType.vb: HackRfNativeLib.Devices.SetDeviceLeds(HackRFDevice*, Byte)
  fullName.vb: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.SetDeviceLeds(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*, Byte)
  name.vb: SetDeviceLeds(HackRFDevice*, Byte)
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.SetDeviceUiEnabled(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*,System.Byte)
  commentId: M:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.SetDeviceUiEnabled(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*,System.Byte)
  id: SetDeviceUiEnabled(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*,System.Byte)
  parent: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices
  langs:
  - csharp
  - vb
  name: SetDeviceUiEnabled(HackRFDevice*, byte)
  nameWithType: HackRfNativeLib.Devices.SetDeviceUiEnabled(HackRFDevice*, byte)
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.SetDeviceUiEnabled(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*, byte)
  type: Method
  assemblies:
  - HackRFDotnet
  namespace: HackRFDotnet.NativeApi.Lib
  summary: >-
    Enable / disable UI display (RAD1O, PortaPack, etc.).

    Enable or disable the display on display-enabled devices (Rad1o, PortaPack).


    Requires USB API version 0x0104 or above!
  example: []
  syntax:
    content: public static extern int SetDeviceUiEnabled(HackRFDevice* device, byte value)
    parameters:
    - id: device
      type: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*
      description: device to enable/disable UI on.
    - id: value
      type: System.Byte
      description: Enable UI. Must be 1 or 0.
    return:
      type: System.Int32
      description: <xref href="HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_SUCCESS" data-throw-if-not-resolved="false"></xref> on success or <xref href="HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_ERROR_LIBUSB" data-throw-if-not-resolved="false"></xref> on usb error.
    content.vb: Public Shared Function SetDeviceUiEnabled(device As HackRFDevice*, value As Byte) As Integer
  overload: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.SetDeviceUiEnabled*
  nameWithType.vb: HackRfNativeLib.Devices.SetDeviceUiEnabled(HackRFDevice*, Byte)
  fullName.vb: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.SetDeviceUiEnabled(HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*, Byte)
  name.vb: SetDeviceUiEnabled(HackRFDevice*, Byte)
references:
- uid: HackRFDotnet.NativeApi.Lib
  commentId: N:HackRFDotnet.NativeApi.Lib
  href: HackRFDotnet.html
  name: HackRFDotnet.NativeApi.Lib
  nameWithType: HackRFDotnet.NativeApi.Lib
  fullName: HackRFDotnet.NativeApi.Lib
  spec.csharp:
  - uid: HackRFDotnet
    name: HackRFDotnet
    href: HackRFDotnet.html
  - name: .
  - uid: HackRFDotnet.NativeApi
    name: NativeApi
    href: HackRFDotnet.NativeApi.html
  - name: .
  - uid: HackRFDotnet.NativeApi.Lib
    name: Lib
    href: HackRFDotnet.NativeApi.Lib.html
  spec.vb:
  - uid: HackRFDotnet
    name: HackRFDotnet
    href: HackRFDotnet.html
  - name: .
  - uid: HackRFDotnet.NativeApi
    name: NativeApi
    href: HackRFDotnet.NativeApi.html
  - name: .
  - uid: HackRFDotnet.NativeApi.Lib
    name: Lib
    href: HackRFDotnet.NativeApi.Lib.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_SUCCESS
  commentId: F:HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_SUCCESS
  href: HackRFDotnet.NativeApi.Enums.System.HackrfError.html#HackRFDotnet_NativeApi_Enums_System_HackrfError_HACKRF_SUCCESS
  name: HACKRF_SUCCESS
  nameWithType: HackrfError.HACKRF_SUCCESS
  fullName: HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_SUCCESS
- uid: HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_ERROR_INVALID_PARAM
  commentId: F:HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_ERROR_INVALID_PARAM
  href: HackRFDotnet.NativeApi.Enums.System.HackrfError.html#HackRFDotnet_NativeApi_Enums_System_HackrfError_HACKRF_ERROR_INVALID_PARAM
  name: HACKRF_ERROR_INVALID_PARAM
  nameWithType: HackrfError.HACKRF_ERROR_INVALID_PARAM
  fullName: HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_ERROR_INVALID_PARAM
- uid: HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_ERROR_NOT_FOUND
  commentId: F:HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_ERROR_NOT_FOUND
  href: HackRFDotnet.NativeApi.Enums.System.HackrfError.html#HackRFDotnet_NativeApi_Enums_System_HackrfError_HACKRF_ERROR_NOT_FOUND
  name: HACKRF_ERROR_NOT_FOUND
  nameWithType: HackrfError.HACKRF_ERROR_NOT_FOUND
  fullName: HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_ERROR_NOT_FOUND
- uid: HackRFDotnet.NativeApi.Enums.System.HackrfError
  commentId: T:HackRFDotnet.NativeApi.Enums.System.HackrfError
  parent: HackRFDotnet.NativeApi.Enums.System
  href: HackRFDotnet.NativeApi.Enums.System.HackrfError.html
  name: HackrfError
  nameWithType: HackrfError
  fullName: HackRFDotnet.NativeApi.Enums.System.HackrfError
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.OpenDevice*
  commentId: Overload:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.OpenDevice
  isExternal: true
  href: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.html#HackRFDotnet_NativeApi_Lib_HackRfNativeLib_Devices_OpenDevice_HackRFDotnet_NativeApi_Structs_Devices_HackRFDevice___
  name: OpenDevice
  nameWithType: HackRfNativeLib.Devices.OpenDevice
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.OpenDevice
- uid: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**
  isExternal: true
  href: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice.html
  name: HackRFDevice**
  nameWithType: HackRFDevice**
  fullName: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice**
  spec.csharp:
  - uid: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice
    name: HackRFDevice
    href: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice.html
  - name: '*'
  - name: '*'
  spec.vb:
  - uid: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice
    name: HackRFDevice
    href: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice.html
  - name: '*'
  - name: '*'
- uid: HackRFDotnet.NativeApi.Enums.System
  commentId: N:HackRFDotnet.NativeApi.Enums.System
  href: HackRFDotnet.html
  name: HackRFDotnet.NativeApi.Enums.System
  nameWithType: HackRFDotnet.NativeApi.Enums.System
  fullName: HackRFDotnet.NativeApi.Enums.System
  spec.csharp:
  - uid: HackRFDotnet
    name: HackRFDotnet
    href: HackRFDotnet.html
  - name: .
  - uid: HackRFDotnet.NativeApi
    name: NativeApi
    href: HackRFDotnet.NativeApi.html
  - name: .
  - uid: HackRFDotnet.NativeApi.Enums
    name: Enums
    href: HackRFDotnet.NativeApi.Enums.html
  - name: .
  - uid: HackRFDotnet.NativeApi.Enums.System
    name: System
    href: HackRFDotnet.NativeApi.Enums.System.html
  spec.vb:
  - uid: HackRFDotnet
    name: HackRFDotnet
    href: HackRFDotnet.html
  - name: .
  - uid: HackRFDotnet.NativeApi
    name: NativeApi
    href: HackRFDotnet.NativeApi.html
  - name: .
  - uid: HackRFDotnet.NativeApi.Enums
    name: Enums
    href: HackRFDotnet.NativeApi.Enums.html
  - name: .
  - uid: HackRFDotnet.NativeApi.Enums.System
    name: System
    href: HackRFDotnet.NativeApi.Enums.System.html
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListFree(HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*)
  commentId: M:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListFree(HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*)
  isExternal: true
  href: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.html#HackRFDotnet_NativeApi_Lib_HackRfNativeLib_Devices_DeviceListFree_HackRFDotnet_NativeApi_Structs_Devices_HackRFDeviceList__
  name: DeviceListFree(HackRFDeviceList*)
  nameWithType: HackRfNativeLib.Devices.DeviceListFree(HackRFDeviceList*)
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListFree(HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*)
  spec.csharp:
  - uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListFree(HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*)
    name: DeviceListFree
    isExternal: true
    href: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.html#HackRFDotnet_NativeApi_Lib_HackRfNativeLib_Devices_DeviceListFree_HackRFDotnet_NativeApi_Structs_Devices_HackRFDeviceList__
  - name: (
  - uid: HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList
    name: HackRFDeviceList
    href: HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList.html
  - name: '*'
  - name: )
  spec.vb:
  - uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListFree(HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*)
    name: DeviceListFree
    isExternal: true
    href: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.html#HackRFDotnet_NativeApi_Lib_HackRfNativeLib_Devices_DeviceListFree_HackRFDotnet_NativeApi_Structs_Devices_HackRFDeviceList__
  - name: (
  - uid: HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList
    name: HackRFDeviceList
    href: HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList.html
  - name: '*'
  - name: )
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.QueryDeviceList*
  commentId: Overload:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.QueryDeviceList
  isExternal: true
  href: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.html#HackRFDotnet_NativeApi_Lib_HackRfNativeLib_Devices_QueryDeviceList
  name: QueryDeviceList
  nameWithType: HackRfNativeLib.Devices.QueryDeviceList
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.QueryDeviceList
- uid: HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*
  isExternal: true
  href: HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList.html
  name: HackRFDeviceList*
  nameWithType: HackRFDeviceList*
  fullName: HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList*
  spec.csharp:
  - uid: HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList
    name: HackRFDeviceList
    href: HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList.html
  - name: '*'
  spec.vb:
  - uid: HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList
    name: HackRFDeviceList
    href: HackRFDotnet.NativeApi.Structs.Devices.HackRFDeviceList.html
  - name: '*'
- uid: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice
  commentId: T:HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice
  href: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice.html
  name: HackRFDevice
  nameWithType: HackRFDevice
  fullName: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListOpen*
  commentId: Overload:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListOpen
  isExternal: true
  href: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.html#HackRFDotnet_NativeApi_Lib_HackRfNativeLib_Devices_DeviceListOpen_HackRFDotnet_NativeApi_Structs_Devices_HackRFDeviceList__System_Int32_HackRFDotnet_NativeApi_Structs_Devices_HackRFDevice___
  name: DeviceListOpen
  nameWithType: HackRfNativeLib.Devices.DeviceListOpen
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListOpen
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.OpenDeviceBySerial*
  commentId: Overload:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.OpenDeviceBySerial
  isExternal: true
  href: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.html#HackRFDotnet_NativeApi_Lib_HackRfNativeLib_Devices_OpenDeviceBySerial_System_String_HackRFDotnet_NativeApi_Structs_Devices_HackRFDevice___
  name: OpenDeviceBySerial
  nameWithType: HackRfNativeLib.Devices.OpenDeviceBySerial
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.OpenDeviceBySerial
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListFree*
  commentId: Overload:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListFree
  isExternal: true
  href: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.html#HackRFDotnet_NativeApi_Lib_HackRfNativeLib_Devices_DeviceListFree_HackRFDotnet_NativeApi_Structs_Devices_HackRFDeviceList__
  name: DeviceListFree
  nameWithType: HackRfNativeLib.Devices.DeviceListFree
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.DeviceListFree
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.CloseDevice*
  commentId: Overload:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.CloseDevice
  isExternal: true
  href: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.html#HackRFDotnet_NativeApi_Lib_HackRfNativeLib_Devices_CloseDevice_HackRFDotnet_NativeApi_Structs_Devices_HackRFDevice__
  name: CloseDevice
  nameWithType: HackRfNativeLib.Devices.CloseDevice
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.CloseDevice
- uid: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*
  isExternal: true
  href: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice.html
  name: HackRFDevice*
  nameWithType: HackRFDevice*
  fullName: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice*
  spec.csharp:
  - uid: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice
    name: HackRFDevice
    href: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice.html
  - name: '*'
  spec.vb:
  - uid: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice
    name: HackRFDevice
    href: HackRFDotnet.NativeApi.Structs.Devices.HackRFDevice.html
  - name: '*'
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.ResetDevice*
  commentId: Overload:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.ResetDevice
  isExternal: true
  href: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.html#HackRFDotnet_NativeApi_Lib_HackRfNativeLib_Devices_ResetDevice_HackRFDotnet_NativeApi_Structs_Devices_HackRFDevice__
  name: ResetDevice
  nameWithType: HackRfNativeLib.Devices.ResetDevice
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.ResetDevice
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.SetDeviceLeds*
  commentId: Overload:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.SetDeviceLeds
  isExternal: true
  href: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.html#HackRFDotnet_NativeApi_Lib_HackRfNativeLib_Devices_SetDeviceLeds_HackRFDotnet_NativeApi_Structs_Devices_HackRFDevice__System_Byte_
  name: SetDeviceLeds
  nameWithType: HackRfNativeLib.Devices.SetDeviceLeds
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.SetDeviceLeds
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_ERROR_LIBUSB
  commentId: F:HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_ERROR_LIBUSB
  href: HackRFDotnet.NativeApi.Enums.System.HackrfError.html#HackRFDotnet_NativeApi_Enums_System_HackrfError_HACKRF_ERROR_LIBUSB
  name: HACKRF_ERROR_LIBUSB
  nameWithType: HackrfError.HACKRF_ERROR_LIBUSB
  fullName: HackRFDotnet.NativeApi.Enums.System.HackrfError.HACKRF_ERROR_LIBUSB
- uid: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.SetDeviceUiEnabled*
  commentId: Overload:HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.SetDeviceUiEnabled
  isExternal: true
  href: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.html#HackRFDotnet_NativeApi_Lib_HackRfNativeLib_Devices_SetDeviceUiEnabled_HackRFDotnet_NativeApi_Structs_Devices_HackRFDevice__System_Byte_
  name: SetDeviceUiEnabled
  nameWithType: HackRfNativeLib.Devices.SetDeviceUiEnabled
  fullName: HackRFDotnet.NativeApi.Lib.HackRfNativeLib.Devices.SetDeviceUiEnabled
